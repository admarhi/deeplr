% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate2_vec.R
\name{translate2_vec}
\alias{translate2_vec}
\title{Translate character vectors element by element using DeepL}
\usage{
translate2_vec(text, source_lang = NULL, target_lang = "EN",
  get_detect = FALSE, subdomain = "www2")
}
\arguments{
\item{text}{character vector to be translated. A single element must not exceed 5000 characters. Only UTF8-encoded plain text
is supported. Elements may contain multiple sentences.}

\item{source_lang}{vector containing the source languages of the texts to be translated (see below). If argument \code{is.null},
the API will try to detect the languages of the source. If input is of length 1, the same source language is applied to all elements.}

\item{target_lang}{vector containing the languages into which to translate. If input is of length 1, all elements are translated
    into the same language. Can be one of the following:
\itemize{
\item \code{EN} English
\item \code{DE} German
\item \code{FR} French
\item \code{ES} Spanish
\item \code{PT} Portuguese
\item \code{IT} Italian
\item \code{NL} Dutch
\item \code{PL} Polish
\item \code{RU} Russian
 }}

\item{get_detect}{if \code{TRUE}, the languages detected for the source texts are also included in the response. It corresponds to
the values of the argument \code{source_lang} if it was specified. If \code{FALSE}, only the translated texts are returned.}

\item{subdomain}{specifies the deepl subdomain to be used for the translation request. Currently: 'www2'}
}
\value{
If \code{get_detect} is set to \code{FALSE} a \code{character vector} containing the translations
    is returned. Otherwise, a \code{data.frame} (\code{tibble::tibble}) is returned with the following columns:
\itemize{
\item \code{translation} the translated texts.
\item \code{source_lang} detected or specified languages of the input texts.
}
}
\description{
\code{translate2_vec} translates character vectors between English, German, French, Spanish,
    Portuguese, Italian, Dutch, Polish and Russian using the undocumented JSON-RPC DeepL API.
    No authentication key is required to use this service.
}
\examples{
\donttest{
# Character vector
dat <- c("A dog.", "Un chien.", "Un perro.", "Un cane.", "Een hond.")

# Translate
translate2_vec(dat, target_lang = "DE")
}

}
